<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="http://structorizer.fisch.lu/" version="3.24-11" text="&#34;CryptTri()&#34;" comment="&#34;&#34;" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;letter = key.Length();&#34;,&#34;string temp;&#34;,&#34;passage = 0;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
		<for text="&#34;pour i &#60;- 0 à letter - 1&#34;" comment="&#34;&#34;" counterVar="i" startValue="0" endValue="letter - 1" stepConst="1" style="COUNTER" color="ffffff">
			<qFor>
				<instruction text="&#34;tabKey[i] = key[i] &#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qFor>
		</for>
		<repeat text="&#34;jusqu'à (permut = true)&#34;" comment="&#34;&#34;" color="ffffff">
			<qRepeat>
				<instruction text="&#34;permut = false&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
				<for text="&#34;pour i &#60;- 0 à n - 2 - passage&#34;" comment="&#34;&#34;" counterVar="i" startValue="0" endValue="n - 2 - passage" stepConst="1" style="COUNTER" color="ffffff">
					<qFor>
						<alternative text="&#34;(tabKey[i] &#62; tabKey[i - 1])&#34;" comment="&#34;&#34;" color="ffffff">
							<qTrue>
								<instruction text="&#34;temp = tabKey[i];&#34;,&#34;tabKey[i] = tabKey[i + 1];&#34;,&#34;tabKey[i + 1] = temp;&#34;,&#34;permut = true&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
							</qTrue>
							<qFalse>
							</qFalse>
						</alternative>
					</qFor>
				</for>
				<instruction text="&#34;passage = passage + 1&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qRepeat>
		</repeat>
	</children>
</root>